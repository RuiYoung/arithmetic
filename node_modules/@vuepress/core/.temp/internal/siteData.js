/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "算法",
  "description": "网站描述",
  "base": "/arithmetic/",
  "headTags": [
    [
      "link",
      {
        "rel": "icon",
        "href": "/arithmetic/favicon.ico"
      }
    ]
  ],
  "pages": [
    {
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "/logo.jpg",
        "actionText": "快速上手 →",
        "actionLink": "/basic/JavaScript/",
        "features": [
          {
            "title": "简洁至上",
            "details": "以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。"
          },
          {
            "title": "Vue驱动",
            "details": "享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。"
          },
          {
            "title": "高性能",
            "details": "VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。"
          }
        ],
        "footer": "MIT Licensed | Copyright © 2018-present Evan You"
      },
      "regularPath": "/",
      "relativePath": "README.md",
      "key": "v-1eb37eac",
      "path": "/",
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "搞懂Z-index的所有细节",
      "frontmatter": {},
      "regularPath": "/basic/CSS/",
      "relativePath": "basic/CSS/README.md",
      "key": "v-1938cee0",
      "path": "/basic/CSS/",
      "headers": [
        {
          "level": 2,
          "title": "z-index 在什么情况下才生效？",
          "slug": "z-index-在什么情况下才生效？"
        },
        {
          "level": 2,
          "title": "z-index值越大元素越靠前，对吗？",
          "slug": "z-index值越大元素越靠前，对吗？"
        },
        {
          "level": 2,
          "title": "总结:",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "z-index 不设置和设置为0有什么区别?",
          "slug": "z-index-不设置和设置为0有什么区别"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "2周时间掌握47个CSS技巧",
      "frontmatter": {},
      "regularPath": "/basic/CSS/47css-trick.html",
      "relativePath": "basic/CSS/47css-trick.md",
      "key": "v-9a994d96",
      "path": "/basic/CSS/47css-trick.html",
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "浏览器渲染引擎到底做了什么",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/Browser.html",
      "relativePath": "basic/JavaScript/Browser.md",
      "key": "v-7ba7ed26",
      "path": "/basic/JavaScript/Browser.html",
      "headers": [
        {
          "level": 2,
          "title": "浏览器",
          "slug": "浏览器"
        },
        {
          "level": 2,
          "title": "浏览器的主要组件",
          "slug": "浏览器的主要组件"
        },
        {
          "level": 2,
          "title": "渲染引擎(The rendering engine)",
          "slug": "渲染引擎-the-rendering-engine"
        },
        {
          "level": 3,
          "title": "渲染引擎介绍",
          "slug": "渲染引擎介绍"
        },
        {
          "level": 3,
          "title": "渲染流程",
          "slug": "渲染流程"
        },
        {
          "level": 2,
          "title": "参考博客",
          "slug": "参考博客"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "CSS清除浮动的三种方法",
      "frontmatter": {},
      "regularPath": "/basic/CSS/clear-float.html",
      "relativePath": "basic/CSS/clear-float.md",
      "key": "v-03469f16",
      "path": "/basic/CSS/clear-float.html",
      "headers": [
        {
          "level": 2,
          "title": "先上一个简单的例子",
          "slug": "先上一个简单的例子"
        },
        {
          "level": 2,
          "title": "给空div加clear",
          "slug": "给空div加clear"
        },
        {
          "level": 2,
          "title": "使用伪类",
          "slug": "使用伪类"
        },
        {
          "level": 2,
          "title": "overflow: hidden清除浮动",
          "slug": "overflow-hidden清除浮动"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "rem方案完美解决自适应",
      "frontmatter": {},
      "regularPath": "/basic/CSS/rem.html",
      "relativePath": "basic/CSS/rem.md",
      "key": "v-02b181b5",
      "path": "/basic/CSS/rem.html",
      "headers": [
        {
          "level": 2,
          "title": "什么是rem",
          "slug": "什么是rem"
        },
        {
          "level": 2,
          "title": "如何用rem解决移动端适配",
          "slug": "如何用rem解决移动端适配"
        },
        {
          "level": 2,
          "title": "参考文献",
          "slug": "参考文献"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "学会了ES6，就不会写出那样的代码",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/",
      "relativePath": "basic/JavaScript/README.md",
      "key": "v-9e4f0088",
      "path": "/basic/JavaScript/",
      "headers": [
        {
          "level": 2,
          "title": "声明变量的新姿势",
          "slug": "声明变量的新姿势"
        },
        {
          "level": 3,
          "title": "用let不用var",
          "slug": "用let不用var"
        },
        {
          "level": 3,
          "title": "有时候const比let更好",
          "slug": "有时候const比let更好"
        },
        {
          "level": 2,
          "title": "动态字符串",
          "slug": "动态字符串"
        },
        {
          "level": 2,
          "title": "解构赋值的骚操作",
          "slug": "解构赋值的骚操作"
        },
        {
          "level": 3,
          "title": "变量赋值",
          "slug": "变量赋值"
        },
        {
          "level": 3,
          "title": "函数传对象",
          "slug": "函数传对象"
        },
        {
          "level": 2,
          "title": "关于对象的细节",
          "slug": "关于对象的细节"
        },
        {
          "level": 3,
          "title": "逗号",
          "slug": "逗号"
        },
        {
          "level": 3,
          "title": "一次性初始化完全",
          "slug": "一次性初始化完全"
        },
        {
          "level": 3,
          "title": "在简洁一点",
          "slug": "在简洁一点"
        },
        {
          "level": 2,
          "title": "数组",
          "slug": "数组"
        },
        {
          "level": 3,
          "title": "...",
          "slug": ""
        },
        {
          "level": 3,
          "title": "不要跟我提类数组",
          "slug": "不要跟我提类数组"
        },
        {
          "level": 2,
          "title": "函数",
          "slug": "函数"
        },
        {
          "level": 3,
          "title": "箭头函数=>",
          "slug": "箭头函数"
        },
        {
          "level": 3,
          "title": "不要把布尔值直接传入函数",
          "slug": "不要把布尔值直接传入函数"
        },
        {
          "level": 3,
          "title": "别再用arguments（类数组）了！",
          "slug": "别再用arguments（类数组）了！"
        },
        {
          "level": 3,
          "title": "传参时试试设置默认值？",
          "slug": "传参时试试设置默认值？"
        },
        {
          "level": 2,
          "title": "Object？Map！",
          "slug": "object？map！"
        },
        {
          "level": 3,
          "title": "简单的键值对优先Map",
          "slug": "简单的键值对优先map"
        },
        {
          "level": 2,
          "title": "更加简洁直观class语法",
          "slug": "更加简洁直观class语法"
        },
        {
          "level": 2,
          "title": "模块化",
          "slug": "模块化"
        },
        {
          "level": 3,
          "title": "引入模块",
          "slug": "引入模块"
        },
        {
          "level": 3,
          "title": "输出模块",
          "slug": "输出模块"
        },
        {
          "level": 2,
          "title": "编码规范",
          "slug": "编码规范"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "深拷贝需要考虑的一些问题",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/deep-copy.html",
      "relativePath": "basic/JavaScript/deep-copy.md",
      "key": "v-2e1ba05e",
      "path": "/basic/JavaScript/deep-copy.html",
      "headers": [
        {
          "level": 2,
          "title": "",
          "slug": ""
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "使用原生 JS 实现事件委托",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/event-commission.html",
      "relativePath": "basic/JavaScript/event-commission.md",
      "key": "v-ee9fd122",
      "path": "/basic/JavaScript/event-commission.html",
      "headers": [
        {
          "level": 2,
          "title": "什么是事件委托?",
          "slug": "什么是事件委托"
        },
        {
          "level": 2,
          "title": "为什么要用事件委托?",
          "slug": "为什么要用事件委托"
        },
        {
          "level": 2,
          "title": "事件委托的原理",
          "slug": "事件委托的原理"
        },
        {
          "level": 3,
          "title": "冒泡",
          "slug": "冒泡"
        },
        {
          "level": 2,
          "title": "如何实现委托?",
          "slug": "如何实现委托"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "JavaScript的三种事件模型",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/event-model.html",
      "relativePath": "basic/JavaScript/event-model.md",
      "key": "v-329b8811",
      "path": "/basic/JavaScript/event-model.html",
      "headers": [
        {
          "level": 2,
          "title": "DOM0事件模型（原始事件模型）",
          "slug": "dom0事件模型（原始事件模型）"
        },
        {
          "level": 2,
          "title": "DOM2事件模型",
          "slug": "dom2事件模型"
        },
        {
          "level": 3,
          "title": "事件捕获和事件冒泡（capture,bubble )",
          "slug": "事件捕获和事件冒泡（capture-bubble"
        },
        {
          "level": 3,
          "title": "addEventListener",
          "slug": "addeventlistener"
        },
        {
          "level": 2,
          "title": "IE事件模型",
          "slug": "ie事件模型"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "吃透ES6----let和const",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/let&const.html",
      "relativePath": "basic/JavaScript/let&const.md",
      "key": "v-4af3ff8d",
      "path": "/basic/JavaScript/let&const.html",
      "headers": [
        {
          "level": 2,
          "title": "let",
          "slug": "let"
        },
        {
          "level": 3,
          "title": "再也没有变量提升",
          "slug": "再也没有变量提升"
        },
        {
          "level": 3,
          "title": "暂时性死区（temporal dead zone）",
          "slug": "暂时性死区（temporal-dead-zone）"
        },
        {
          "level": 3,
          "title": "不允许重复声明",
          "slug": "不允许重复声明"
        },
        {
          "level": 3,
          "title": "块级作用域",
          "slug": "块级作用域"
        },
        {
          "level": 2,
          "title": "const",
          "slug": "const"
        },
        {
          "level": 3,
          "title": "const声明的变量真的不能改变吗？",
          "slug": "const声明的变量真的不能改变吗？"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "吃透ES6----简洁优雅的箭头函数",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/qqq.html",
      "relativePath": "basic/JavaScript/qqq.md",
      "key": "v-39b1e59b",
      "path": "/basic/JavaScript/qqq.html",
      "headers": [
        {
          "level": 2,
          "title": "基本用法",
          "slug": "基本用法"
        },
        {
          "level": 2,
          "title": "注意事项",
          "slug": "注意事项"
        },
        {
          "level": 3,
          "title": "this的确定?",
          "slug": "this的确定"
        },
        {
          "level": 3,
          "title": "不可以当作构造函数",
          "slug": "不可以当作构造函数"
        },
        {
          "level": 3,
          "title": "arguments对象",
          "slug": "arguments对象"
        },
        {
          "level": 3,
          "title": "yield命令",
          "slug": "yield命令"
        },
        {
          "level": 2,
          "title": "箭头函数绑定this",
          "slug": "箭头函数绑定this"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "使用requestAnimationFrame来提升动画性能",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/requestAnimationFrame.html",
      "relativePath": "basic/JavaScript/requestAnimationFrame.md",
      "key": "v-8e86db66",
      "path": "/basic/JavaScript/requestAnimationFrame.html",
      "headers": [
        {
          "level": 2,
          "title": "传统动画的弊端",
          "slug": "传统动画的弊端"
        },
        {
          "level": 2,
          "title": "requestAnimationFrame？",
          "slug": "requestanimationframe？"
        },
        {
          "level": 2,
          "title": "用法",
          "slug": "用法"
        },
        {
          "level": 2,
          "title": "例子",
          "slug": "例子"
        },
        {
          "level": 2,
          "title": "浏览器兼容情况",
          "slug": "浏览器兼容情况"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "浅拷贝没那么简单",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/shallow-copy.html",
      "relativePath": "basic/JavaScript/shallow-copy.md",
      "key": "v-7705edef",
      "path": "/basic/JavaScript/shallow-copy.html",
      "headers": [
        {
          "level": 2,
          "title": "拷贝的分类",
          "slug": "拷贝的分类"
        },
        {
          "level": 2,
          "title": "逐个属性遍历（ES6之前）",
          "slug": "逐个属性遍历（es6之前）"
        },
        {
          "level": 2,
          "title": "ES6下的浅拷贝",
          "slug": "es6下的浅拷贝"
        },
        {
          "level": 3,
          "title": "Object.assign()",
          "slug": "object-assign"
        },
        {
          "level": 3,
          "title": "解构赋值+rest",
          "slug": "解构赋值-rest"
        },
        {
          "level": 2,
          "title": "ES7下的浅拷贝",
          "slug": "es7下的浅拷贝"
        },
        {
          "level": 3,
          "title": "Object.getOwnPropertyDescriptors",
          "slug": "object-getownpropertydescriptors"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "this到底指向哪里？",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/this.html",
      "relativePath": "basic/JavaScript/this.md",
      "key": "v-e8810622",
      "path": "/basic/JavaScript/this.html",
      "headers": [
        {
          "level": 2,
          "title": "指向只与调用有关",
          "slug": "指向只与调用有关"
        },
        {
          "level": 2,
          "title": "改变this指向的方法",
          "slug": "改变this指向的方法"
        },
        {
          "level": 3,
          "title": "箭头函数下的this",
          "slug": "箭头函数下的this"
        },
        {
          "level": 3,
          "title": "apply & call",
          "slug": "apply-call"
        },
        {
          "level": 3,
          "title": "bind 和 call apply",
          "slug": "bind-和-call-apply"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "可能是最全的 Javascript 类型检查方案",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/type.html",
      "relativePath": "basic/JavaScript/type.md",
      "key": "v-87f4f522",
      "path": "/basic/JavaScript/type.html",
      "headers": [
        {
          "level": 2,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 2,
          "title": "Typeof",
          "slug": "typeof"
        },
        {
          "level": 3,
          "title": "typeof 原理",
          "slug": "typeof-原理"
        },
        {
          "level": 2,
          "title": "instanceof",
          "slug": "instanceof"
        },
        {
          "level": 2,
          "title": "Object.prototype.toString.call()",
          "slug": "object-prototype-tostring-call"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "JavaScript继承新旧方法汇总",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/inherit.html",
      "relativePath": "basic/JavaScript/inherit.md",
      "key": "v-b24e1072",
      "path": "/basic/JavaScript/inherit.html",
      "headers": [
        {
          "level": 2,
          "title": "例子",
          "slug": "例子"
        },
        {
          "level": 2,
          "title": "1.简单的原型链",
          "slug": "_1-简单的原型链"
        },
        {
          "level": 3,
          "title": "1.1 实现方法",
          "slug": "_1-1-实现方法"
        },
        {
          "level": 3,
          "title": "1.2 核心",
          "slug": "_1-2-核心"
        },
        {
          "level": 3,
          "title": "1.3 优缺点",
          "slug": "_1-3-优缺点"
        },
        {
          "level": 3,
          "title": "1.4 继承链的紊乱问题",
          "slug": "_1-4-继承链的紊乱问题"
        },
        {
          "level": 2,
          "title": "2. 借用构造函数",
          "slug": "_2-借用构造函数"
        },
        {
          "level": 3,
          "title": "2.1 实现方法",
          "slug": "_2-1-实现方法"
        },
        {
          "level": 3,
          "title": "2.2 核心",
          "slug": "_2-2-核心"
        },
        {
          "level": 3,
          "title": "2.3 优缺点",
          "slug": "_2-3-优缺点"
        },
        {
          "level": 2,
          "title": "3. 组合继承（伪经典继承）",
          "slug": "_3-组合继承（伪经典继承）"
        },
        {
          "level": 3,
          "title": "3.1 实现方法",
          "slug": "_3-1-实现方法"
        },
        {
          "level": 3,
          "title": "3.2 核心",
          "slug": "_3-2-核心"
        },
        {
          "level": 3,
          "title": "3.3 优缺点",
          "slug": "_3-3-优缺点"
        },
        {
          "level": 2,
          "title": "4. 原型式",
          "slug": "_4-原型式"
        },
        {
          "level": 3,
          "title": "4.1 实现方法",
          "slug": "_4-1-实现方法"
        },
        {
          "level": 3,
          "title": "4.2 核心",
          "slug": "_4-2-核心"
        },
        {
          "level": 3,
          "title": "4.3 优缺点",
          "slug": "_4-3-优缺点"
        },
        {
          "level": 2,
          "title": "5. 寄生式",
          "slug": "_5-寄生式"
        },
        {
          "level": 3,
          "title": "5.1 实现方法",
          "slug": "_5-1-实现方法"
        },
        {
          "level": 3,
          "title": "5.2 核心",
          "slug": "_5-2-核心"
        },
        {
          "level": 3,
          "title": "5.3 优缺点",
          "slug": "_5-3-优缺点"
        },
        {
          "level": 2,
          "title": "6. 寄生组合继承",
          "slug": "_6-寄生组合继承"
        },
        {
          "level": 3,
          "title": "6.1 实现方法",
          "slug": "_6-1-实现方法"
        },
        {
          "level": 3,
          "title": "6.2 核心",
          "slug": "_6-2-核心"
        },
        {
          "level": 3,
          "title": "6.3 优缺点",
          "slug": "_6-3-优缺点"
        },
        {
          "level": 2,
          "title": "7. ES5使用 Object.create 创建对象",
          "slug": "_7-es5使用-object-create-创建对象"
        },
        {
          "level": 2,
          "title": "8. ES6使用 class 关键字",
          "slug": "_8-es6使用-class-关键字"
        },
        {
          "level": 2,
          "title": "9. 参考文献",
          "slug": "_9-参考文献"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    },
    {
      "title": "排序算法-N个正整数排序",
      "frontmatter": {},
      "regularPath": "/basic/JavaScript/sort.html",
      "relativePath": "basic/JavaScript/sort.md",
      "key": "v-825cc622",
      "path": "/basic/JavaScript/sort.html",
      "headers": [
        {
          "level": 2,
          "title": "算法",
          "slug": "算法"
        },
        {
          "level": 2,
          "title": "定义问题",
          "slug": "定义问题"
        },
        {
          "level": 2,
          "title": "排序算法",
          "slug": "排序算法"
        },
        {
          "level": 3,
          "title": "冒泡排序(BUBBLE)",
          "slug": "冒泡排序-bubble"
        },
        {
          "level": 3,
          "title": "2. 选择排序(SELECT)",
          "slug": "_2-选择排序-select"
        },
        {
          "level": 3,
          "title": "3, 插入排序(INSERT)",
          "slug": "_3-插入排序-insert"
        },
        {
          "level": 3,
          "title": "4. 归并排序(MERGE)",
          "slug": "_4-归并排序-merge"
        },
        {
          "level": 3,
          "title": "5. 快速排序",
          "slug": "_5-快速排序"
        },
        {
          "level": 3,
          "title": "6. 随机快速排序",
          "slug": "_6-随机快速排序"
        }
      ],
      "lastUpdated": "4/26/2020, 5:34:53 PM"
    }
  ],
  "themeConfig": {
    "sidebarDepth": 2,
    "lastUpdated": "Last Updated",
    "nav": [
      {
        "text": "基础知识",
        "link": "/basic/"
      }
    ],
    "sidebar": {
      "/basic/JavaScript/": [
        {
          "title": "JavaScript",
          "collapsable": false,
          "sidebarDepth": 1,
          "children": [
            [
              "Browser",
              "111"
            ],
            [
              "sort",
              "222"
            ]
          ]
        }
      ]
    }
  }
}